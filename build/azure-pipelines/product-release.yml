steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.x"

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: Get Secrets"
    inputs:
      azureSubscription: "vscode-builds-subscription"
      KeyVaultName: vscode

  - script: |
      set -e
      (cd build ; yarn)
    displayName: Install dependencies

  - script: |
      set -e
      VERSION=`node -p "require(\"./package.json\").version"`
      AZURE_DOCUMENTDB_MASTERKEY="$(builds-docdb-key-readwrite)" \
        node build/azure-pipelines/common/createBuild.js $VERSION
    displayName: Create build

  - pwsh: Start-Sleep -Seconds 600
    displayName: Delay start

  - pwsh: |
      $env:VSCODE_MIXIN_PASSWORD="$(github-distro-mixin-password)"
      $env:AZURE_DOCUMENTDB_MASTERKEY="$(builds-docdb-key-readwrite)"
      $env:AZURE_STORAGE_ACCESS_KEY="$(ticino-storage-key)"
      $env:AZURE_STORAGE_ACCESS_KEY_2="$(vscode-storage-key)"
      build/azure-pipelines/release.ps1
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    displayName: Process artifacts

  - script: |
      set -e

      # AZURE_DOCUMENTDB_MASTERKEY="$(builds-docdb-key-readwrite)" \
      # AZURE_STORAGE_ACCESS_KEY_2="$(vscode-storage-key)" \
      # MOONCAKE_STORAGE_ACCESS_KEY="$(vscode-mooncake-storage-key)" \
      # node build/azure-pipelines/common/sync-mooncake.js "$VSCODE_QUALITY"

      echo "we would sync mooncake $VSCODE_QUALITY"

  - script: |
      set -e

      # AZURE_DOCUMENTDB_MASTERKEY="$(builds-docdb-key-readwrite)" \
      # node build/azure-pipelines/common/releaseBuild.js

      echo 'we would release the build here...'
    condition: and(succeeded(), or(eq(variables['VSCODE_RELEASE'], true), and(in(variables['VSCODE_QUALITY'], 'insider', 'exploration'), eq(variables['VSCODE_SCHEDULEDBUILD'], true))))
